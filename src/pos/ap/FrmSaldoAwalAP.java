/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pos.ap;

import pos.ar.*;
import com.ustasoft.component.GeneralFunction;
import com.ustasoft.pos.dao.jdbc.ArInvDao;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.awt.KeyboardFocusManager;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.JXDatePicker;
import pos.FrmReminder;
import pos.MainForm;
import pos.dialog.DlgSaldoAwalAp;

/**
 *
 * @author cak-ust
 */
public class FrmSaldoAwalAP extends javax.swing.JInternalFrame {
    private GeneralFunction fn=new GeneralFunction();
    private Connection conn;
    MyKeyListener kListener=new MyKeyListener();
    private Object srcForm;
    private Integer apId;
    private ArInvDao dao=new ArInvDao();
    
    /**
     * Creates new form FrmSaldoAwalAR
     */
    public FrmSaldoAwalAP() {
        initComponents();
        fn.addKeyListenerInContainer(jPanel2, kListener, txtFocusListener);
        tblDetail.addKeyListener(kListener);
        btnAdd.addKeyListener(kListener);
        btnUpdate.addKeyListener(kListener);
        btnDel.addKeyListener(kListener);
        txtTop.setVisible(false);
        tblDetail.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                int row=tblDetail.getSelectedRow();
                btnUpdate.setEnabled(row >=0);
                btnDel.setEnabled(row >=0);
                btnBayar.setEnabled(row >=0 && 
                        fn.udfGetInt(tblDetail.getValueAt(row, 3)) > fn.udfGetInt(tblDetail.getValueAt(row, 4))
                                );
                
            }
        });
        
        tblDetail.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {
                double total=0;
                for(int i=0; i<tblDetail.getRowCount(); i++){
                    total+=fn.udfGetDouble(tblDetail.getValueAt(i, 3));
                }
                lblTotal.setText(fn.intFmt.format(total));
            }
        });
    }

    public void setConn(Connection c){
        this.conn=c;
        fn.setConn(conn);
        dao.setConn(conn);
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtSupplier = new javax.swing.JTextField();
        txtNamaSupplier = new javax.swing.JTextField();
        txtTop = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnBayar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Saldo Awal Hutang Supplier");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Saldo Awal Hutang Pembelian");
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Supplier :");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(12, 13, 90, 20);

        txtSupplier.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSupplier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSupplier.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSupplierKeyReleased(evt);
            }
        });
        jPanel2.add(txtSupplier);
        txtSupplier.setBounds(106, 14, 90, 20);

        txtNamaSupplier.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNamaSupplier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNamaSupplier.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNamaSupplier.setEnabled(false);
        jPanel2.add(txtNamaSupplier);
        txtNamaSupplier.setBounds(202, 14, 367, 20);

        txtTop.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTop.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTop.setEnabled(false);
        jPanel2.add(txtTop);
        txtTop.setBounds(567, 14, 10, 20);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 590, 50));

        tblDetail.setAutoCreateRowSorter(true);
        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. Invoice", "Tanggal", "Jth. Tempo", "Jumlah", "Terbayar", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetail);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 590, 185));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Total : ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 275, 90, 20));

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("0");
        getContentPane().add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 275, 130, 20));

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/add.png"))); // NOI18N
        btnAdd.setText("Tambah");
        btnAdd.setFocusable(false);
        btnAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 275, 85, 25));

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/delete.png"))); // NOI18N
        btnDel.setText("Hapus");
        btnDel.setEnabled(false);
        btnDel.setFocusable(false);
        btnDel.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        getContentPane().add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 275, 80, 25));

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/pencil.png"))); // NOI18N
        btnUpdate.setText("Ubah");
        btnUpdate.setEnabled(false);
        btnUpdate.setFocusable(false);
        btnUpdate.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 275, 75, 25));

        btnBayar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/zone_money.png"))); // NOI18N
        btnBayar.setText("Bayar");
        btnBayar.setEnabled(false);
        btnBayar.setFocusable(false);
        btnBayar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 275, 80, 25));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSupplierKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplierKeyReleased
        fn.lookup(evt, new Object[]{txtNamaSupplier, txtTop},
                    "select id_relasi::varchar as id, coalesce(nama_relasi,'') as nama_customer, coalesce(top,0) as top "
                    + "from m_relasi "
                    + "where not is_cust and id_relasi::varchar||coalesce(nama_relasi,'') "
                    + "ilike '%" + txtSupplier.getText() + "%' "
                    + "order by 2",
            txtSupplier.getWidth() + txtNamaSupplier.getWidth() + 20, 200);
    }//GEN-LAST:event_txtSupplierKeyReleased

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        udfNew();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        delete();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        udfEdit();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        if(apId !=null){
            loadDetail(apId);
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        bayar();
    }//GEN-LAST:event_btnBayarActionPerformed

    public void loadDetail(Integer apId){
        this.apId=apId;
        String sql="select supplier_id, coalesce(c.nama_relasi,'') as nama, coalesce(c.top,0) as top\n" +
        "from ar_inv h \n" +
        "left join m_relasi c on c.id_relasi=h.supplier_id\n" +
        "where id="+apId;
        try {
            ResultSet rs=conn.createStatement().executeQuery(sql);
            if(rs.next()){
                txtSupplier.setText(rs.getString("supplier_id"));
                txtTop.setText(rs.getString("top"));
                txtNamaSupplier.setText(rs.getString("nama"));
                txtSupplier.setEnabled(false);
                txtNamaSupplier.setEnabled(false);
                rs.close();
                udfLoadSaldoAwal();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmArReceipt.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblDetail;
    private javax.swing.JTextField txtNamaSupplier;
    private javax.swing.JTextField txtSupplier;
    private javax.swing.JTextField txtTop;
    // End of variables declaration//GEN-END:variables

    private void udfNew() {
        DlgSaldoAwalAp d1=new DlgSaldoAwalAp(JOptionPane.getFrameForComponent(this), true);
        d1.setTitle("Tambah Saldo Awal Supplier");
        d1.setRelasi(GeneralFunction.udfGetInt(txtSupplier.getText()), txtNamaSupplier.getText(), fn.udfGetInt(txtTop.getText()));
        d1.setConn(this.conn);
        d1.setSrcForm(this);
        d1.setVisible(true);
    }
    
    public void udfLoadSaldoAwal(){
        String sql="select id, invoice_no, h.invoice_date, h.top, h.invoice_date+h.top as jth_tempo, "
                + "h.invoice_amount, h.paid_amount " +
                    "from ap_inv h \n" +
                    "where trx_type ='SAP'\n" +
                    "and supplier_id="+txtSupplier.getText()+" "
                + "order by id";
        try {
            ((DefaultTableModel)tblDetail.getModel()).setNumRows(0);
            if(txtSupplier.getText().trim().equalsIgnoreCase(""))
                return;
            
            ResultSet rs=conn.createStatement().executeQuery(sql);
            int iRow=-1;
            while(rs.next()){
                ((DefaultTableModel)tblDetail.getModel()).addRow(new Object[]{
                    rs.getString("invoice_no"),
                    rs.getDate("invoice_date"),
                    rs.getDate("jth_tempo"), 
                    rs.getDouble("invoice_amount"),
                    rs.getDouble("paid_amount"),
                    rs.getInt("id")
                });
                
                if(apId !=null && rs.getInt("id")==apId){
                    System.out.println("Sama id-nya");
                    iRow=tblDetail.getRowCount()-1;
                }
            }
            rs.close();
            if(tblDetail.getRowCount() > 0){
                iRow=iRow < 0?0: iRow;
                tblDetail.setRowSelectionInterval(iRow , iRow);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmSaldoAwalAR.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setIdAr(Integer id) {
        this.apId=id;
    }

    public void setSrcForm(Object aThis) {
        this.srcForm=aThis;
    }

    private void udfEdit() {
        int row=tblDetail.getSelectedRow();
        if(row < 0){
            return;
        }
        DlgSaldoAwalAp d1=new DlgSaldoAwalAp(JOptionPane.getFrameForComponent(this), true);
        d1.setTitle("Edit Saldo Awal Piutang");
        d1.setConn(conn);
        d1.setSrcForm(this);
        d1.setApId((Integer)tblDetail.getValueAt(row, tblDetail.getColumnModel().getColumnIndex("ID")));
        d1.setVisible(true);
    }
    
    private void delete(){
        int row=tblDetail.getSelectedRow();
        if(row < 0)
            return;
        if(JOptionPane.showConfirmDialog(this, "Anda yakin untuk menghapus data ini?", "Delete AR", JOptionPane.YES_NO_OPTION)==JOptionPane.NO_OPTION){
            return;
        }
        Integer id=(Integer)tblDetail.getValueAt(row, tblDetail.getColumnModel().getColumnIndex("ID"));
        String message=dao.cekBeforeDelete(id);
        if(message.length() > 0){
            JOptionPane.showMessageDialog(this, message);
            return;
        }
        try {
            int i=conn.createStatement().executeUpdate("delete from ar_inv where id="+id);
            ((DefaultTableModel)tblDetail.getModel()).removeRow(row);
            if(tblDetail.getRowCount()<0)
                return;
            if(tblDetail.getRowCount()>row)
                tblDetail.setRowSelectionInterval(row, row);
            else
                tblDetail.setRowSelectionInterval(0, 0);
            JOptionPane.showMessageDialog(this, "Delete saldo awal piutang sukses!");
            
        } catch (SQLException ex) {
            Logger.getLogger(FrmSaldoAwalAR.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void bayar() {
        int row=tblDetail.getSelectedRow();
        if(row < 0)
            return;
        Integer id=(Integer)tblDetail.getValueAt(row, tblDetail.getColumnModel().getColumnIndex("ID"));
        
        FrmArReceipt f1 = new FrmArReceipt();
        MainForm.jDesktopImage2.add(f1);
        f1.setBounds(0, 0, f1.getWidth(), f1.getHeight());
        f1.setConn(conn);
        f1.setId(id);
        f1.setVisible(true);
    }
    
    public class MyKeyListener extends KeyAdapter {
        @Override
        public void keyTyped(java.awt.event.KeyEvent evt) {
            
//            if(getTableSource()==null)
//                return;
            
            if (evt.getSource() instanceof JTextField &&
              ((JTextField)evt.getSource()).getName()!=null &&
              ((JTextField)evt.getSource()).getName().equalsIgnoreCase("textEditor")) {
                fn.keyTyped(evt);

           }

        }
        
        public void keyPressed(KeyEvent evt) {
            Component ct = KeyboardFocusManager.getCurrentKeyboardFocusManager().getPermanentFocusOwner();
            int keyKode = evt.getKeyCode();
            switch(keyKode){
               case KeyEvent.VK_ENTER : {
                    if(!(ct instanceof JTable))                    {
                        if (!fn.isListVisible()){
                            Component c = findNextFocus();
                            if (c==null) return;
                            c.requestFocus();
                        }else{
                            fn.lstRequestFocus();
                        }
                    }
                    break;
                }
                case KeyEvent.VK_DOWN: {
                    if(!(ct.getClass().getSimpleName().equalsIgnoreCase("JTABLE")))
                        {
                            if (!fn.isListVisible()){
                                Component c = findNextFocus();
                                if (c==null) return;
                                c.requestFocus();
                            }else{
                                fn.lstRequestFocus();
                            }
                            break;
                    }
                }

                case KeyEvent.VK_UP: {
                    if(!(evt.getSource() instanceof JTable)){
                        Component c = findPrevFocus();
                        c.requestFocus();
                    }
                    break;
                }
                case KeyEvent.VK_F4:{
                    break;
                }
                case KeyEvent.VK_INSERT:{
                    udfNew();
                    
                    break;
                }
//                case KeyEvent.VK_ESCAPE:{
//                    dispose();
//                    break;
//                }
                
                case KeyEvent.VK_DELETE:{
                    if(evt.getSource().equals(tblDetail) && tblDetail.getSelectedRow()>=0){
                        delete();
                        
                        
                    }
                    break;

                }
                
            }
        }

//        @Override
//        public void keyReleased(KeyEvent evt){
//            if(evt.getSource().equals(txtDisc)||evt.getSource().equals(txtQty)||evt.getSource().equals(txtUnitPrice))
//                GeneralFunction.keyTyped(evt);
//        }

        public Component findNextFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component nextFocus = policy.getComponentAfter(root, c);
                if (nextFocus == null) {
                    nextFocus = policy.getDefaultComponent(root);
                }
                return nextFocus;
            }
            return null;
        }

        public Component findPrevFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component prevFocus = policy.getComponentBefore(root, c);
                if (prevFocus == null) {
                    prevFocus = policy.getDefaultComponent(root);
                }
                return prevFocus;
            }
            return null;
        }
    }
    private FocusListener txtFocusListener=new FocusListener() {
        public void focusGained(FocusEvent e) {
            if(e.getSource() instanceof JTextField || e.getSource() instanceof JFormattedTextField ){
                ((JTextField)e.getSource()).setBackground(Color.YELLOW);
                if( (e.getSource() instanceof JTextField && ((JTextField)e.getSource()).getName()!=null && ((JTextField)e.getSource()).getName().equalsIgnoreCase("textEditor"))){
                    ((JTextField)e.getSource()).setSelectionStart(0);
                    ((JTextField)e.getSource()).setSelectionEnd(((JTextField)e.getSource()).getText().length());

                }
            }else if(e.getSource() instanceof JXDatePicker){
                ((JXDatePicker)e.getSource()).setBackground(Color.YELLOW);
            }
        }


        public void focusLost(FocusEvent e) {
            if(e.getSource() instanceof  JTextField||e.getSource() instanceof JFormattedTextField){
                ((JTextField)e.getSource()).setBackground(Color.WHITE);
                if(e.getSource().equals(txtSupplier) && !fn.isListVisible())
                    udfLoadSaldoAwal(); 
           }
        }
    } ;
}
