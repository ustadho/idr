/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pos.dialog;

import com.ustasoft.component.GeneralFunction;
import com.ustasoft.pos.dao.jdbc.ApInvDao;
import com.ustasoft.pos.dao.jdbc.SalesDao;
import com.ustasoft.pos.domain.ApInv;
import com.ustasoft.pos.domain.Sales;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.awt.KeyboardFocusManager;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import org.jdesktop.swingx.JXDatePicker;
import pos.MainForm;
import pos.ap.FrmSaldoAwalAP;
import pos.ar.FrmSaldoAwalAR;

/**
 *
 * @author cak-ust
 */
public class DlgSaldoAwalAp extends javax.swing.JDialog {
    private GeneralFunction fn=new GeneralFunction();
    ApInv ap=new ApInv();
    private int idRelasi;
    ApInvDao dao=new ApInvDao();
    private Connection conn;
    private List<Sales> salesman;
    private Object srcForm;
    private Integer apId;
    /**
     * Creates new form DlgSaldoAwalApAr
     */
    public DlgSaldoAwalAp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jXDatePicker1.setFormats(MainForm.sDateFormat);
        MyKeyListener kListener=new MyKeyListener();
        fn.addKeyListenerInContainer(jPanel1, kListener, txtFocusListener);
    }

    
    private void setDueDate(){
        lblJthTempo.setText(new SimpleDateFormat("dd/MM/yyyy").format(
                getDueDate(jXDatePicker1.getDate(),
                fn.udfGetInt(txtTop.getText()))));
    }
    
    private Date getDueDate(Date d, int i){
        Calendar c = Calendar.getInstance();
        c.setTime(d);
        c.add(Calendar.DAY_OF_MONTH, i);

        return c.getTime();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblRelasi = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNoInvoice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        lblJthTempo = new javax.swing.JLabel();
        txtTop = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtJumlah = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setText("Tgl. Invoice :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(5, 60, 75, 23);

        lblRelasi.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(lblRelasi);
        lblRelasi.setBounds(85, 5, 400, 23);

        jLabel2.setText("Relasi : ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(5, 5, 75, 23);
        jPanel1.add(txtNoInvoice);
        txtNoInvoice.setBounds(85, 30, 140, 25);

        jLabel3.setText("No. Invoice :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(5, 30, 75, 23);

        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });
        jPanel1.add(jXDatePicker1);
        jXDatePicker1.setBounds(85, 60, 150, 22);

        lblJthTempo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(lblJthTempo);
        lblJthTempo.setBounds(345, 60, 140, 23);

        txtTop.setText("30");
        jPanel1.add(txtTop);
        txtTop.setBounds(345, 30, 50, 25);

        jLabel5.setText(" Hari");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(395, 30, 40, 23);

        jLabel6.setText("Tgl. Jth Tempo : ");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(255, 60, 90, 23);

        jLabel7.setText("Jumlah :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(5, 85, 75, 23);

        txtJumlah.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtJumlah.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtJumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJumlahKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtJumlahKeyTyped(evt);
            }
        });
        jPanel1.add(txtJumlah);
        txtJumlah.setBounds(85, 85, 140, 25);

        jLabel8.setText("Termin : ");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(255, 30, 70, 23);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/accept.png"))); // NOI18N
        btnSave.setText("Simpan");
        btnSave.setFocusable(false);
        btnSave.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);
        btnSave.setBounds(315, 140, 80, 30);

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/cancel.png"))); // NOI18N
        btnCancel.setText("Batal");
        btnCancel.setFocusable(false);
        btnCancel.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel);
        btnCancel.setBounds(400, 140, 90, 30);
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(85, 125, 395, 10);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(5, 5, 495, 180);

        setSize(new java.awt.Dimension(527, 221));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(!udfCekBeforeSave())
            return;
        ap.setId(apId);
        ap.setSupplierId(idRelasi);
        ap.setInvoiceNo(txtNoInvoice.getText());
        ap.setInvoiceDate(jXDatePicker1.getDate());
        ap.setTop(GeneralFunction.udfGetInt(txtTop.getText()));
        ap.setInvoiceAmount(fn.udfGetDouble(txtJumlah.getText()));
        ap.setItemAmount(fn.udfGetDouble(txtJumlah.getText()));
        ap.setOwing(fn.udfGetDouble(txtJumlah.getText()));
        ap.setPaidAmount(new Double(0));
        ap.setTrxType("SAP");
        ap.setIdGudang(new Integer(1));
        try {
            dao.simpanHeader(ap);
            JOptionPane.showMessageDialog(this, apId ==null? "Simpan": "Update" +" Saldo Awal Sukses!");
            if(srcForm instanceof FrmSaldoAwalAP){
                ((FrmSaldoAwalAP)srcForm).udfLoadSaldoAwal();
            }
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(DlgSaldoAwalAp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtJumlahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJumlahKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJumlahKeyPressed

    private void txtJumlahKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJumlahKeyTyped
        fn.keyTyped(evt);
    }//GEN-LAST:event_txtJumlahKeyTyped

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
        setDueDate();
    }//GEN-LAST:event_jXDatePicker1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            if(apId!=null){
                String sql="select h.invoice_no, h.supplier_id, coalesce(c.nama_relasi,'') as nama, "
                        + "h.invoice_date, h.top, to_Char(h.invoice_date+h.top, 'dd/MM/yyyy') as jth_tempo, \n" +
                            "h.invoice_amount\n" +
                            "from ap_inv h \n" +
                            "left join m_relasi c on c.id_relasi=h.id_customer\n" +
                            "where id="+apId;
                ResultSet rs=conn.createStatement().executeQuery(sql);
                if(rs.next()){
                    idRelasi=rs.getInt("id_customer");
                    lblRelasi.setText(rs.getString("nama"));
                    txtNoInvoice.setText(rs.getString("invoice_no"));
                    jXDatePicker1.setDate(rs.getDate("invoice_date"));
                    txtTop.setText(rs.getString("top"));
                    lblJthTempo.setText(rs.getString("jth_tempo"));
                    txtJumlah.setText(GeneralFunction.intFmt.format(rs.getDouble("invoice_amount")));
                }
                rs.close();
            }
        } catch (Exception ex) {
            Logger.getLogger(DlgSaldoAwalAp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line apguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgSaldoAwalAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgSaldoAwalAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgSaldoAwalAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgSaldoAwalAp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgSaldoAwalAp dialog = new DlgSaldoAwalAp(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JLabel lblJthTempo;
    private javax.swing.JLabel lblRelasi;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtNoInvoice;
    private javax.swing.JTextField txtTop;
    // End of variables declaration//GEN-END:variables

    public void setRelasi(int id, String text, int top) {
        this.idRelasi=id;
        lblRelasi.setText(text);
        txtTop.setText(GeneralFunction.intFmt.format(top));
        setDueDate();
    }

    public void setConn(Connection conn) {
        this.conn=conn;
        dao.setConn(conn);
    }
    
    private FocusListener txtFocusListener=new FocusListener() {
        public void focusGained(FocusEvent e) {
            if(e.getSource() instanceof JTextField || e.getSource() instanceof JFormattedTextField ){
                ((JTextField)e.getSource()).setBackground(Color.YELLOW);
                if( (e.getSource() instanceof JTextField && ((JTextField)e.getSource()).getName()!=null && ((JTextField)e.getSource()).getName().equalsIgnoreCase("textEditor"))){
                    ((JTextField)e.getSource()).setSelectionStart(0);
                    ((JTextField)e.getSource()).setSelectionEnd(((JTextField)e.getSource()).getText().length());

                }
            }else if(e.getSource() instanceof JXDatePicker){
                ((JXDatePicker)e.getSource()).setBackground(Color.YELLOW);
            }
        }


        public void focusLost(FocusEvent e) {
            if(e.getSource() instanceof  JTextField||e.getSource() instanceof JFormattedTextField){
                ((JTextField)e.getSource()).setBackground(Color.WHITE);
                if(e.getSource().equals(txtTop))
                    setDueDate();
           }
        }
    } ;

    public void setSrcForm(Object aThis) {
        this.srcForm=aThis;
    }

    public void setApId(Integer integer) {
        this.apId=integer;
    }

    private boolean udfCekBeforeSave() {
        btnSave.requestFocus();
        if(lblRelasi.getText().trim().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Pelanggan harus terisi!");
            return false;
        }
        if(apId ==null){
            try {
                ResultSet rs=conn.createStatement().executeQuery("select * from ap_inv where invoice_no='"+txtNoInvoice.getText()+"'");
                if(rs.next()){
                    JOptionPane.showMessageDialog(this, "No. Invoice tersebut sudah pernah digunakan!");
                    txtNoInvoice.requestFocus();
                    return false;
                }
            } catch (SQLException ex) {
                Logger.getLogger(DlgSaldoAwalAp.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(fn.udfGetDouble(txtJumlah.getText())==0){
            JOptionPane.showMessageDialog(this, "Silahkan isi jumlah piutang terlebih dulu!");
            txtJumlah.requestFocus();
            return false;
        }
        return true;
    }
    
    public class MyKeyListener extends KeyAdapter {
        @Override
        public void keyTyped(java.awt.event.KeyEvent evt) {
            
//            if(getTableSource()==null)
//                return;
            
            if (evt.getSource() instanceof JTextField &&
              ((JTextField)evt.getSource()).getName()!=null &&
              ((JTextField)evt.getSource()).getName().equalsIgnoreCase("textEditor")) {
                fn.keyTyped(evt);

           }

        }
        
        public void keyPressed(KeyEvent evt) {
            Component ct = KeyboardFocusManager.getCurrentKeyboardFocusManager().getPermanentFocusOwner();
            int keyKode = evt.getKeyCode();
            switch(keyKode){
               case KeyEvent.VK_ENTER : {
                    if(!(ct instanceof JTable))                    {
                        if (!fn.isListVisible()){
                            Component c = findNextFocus();
                            if (c==null) return;
                            c.requestFocus();
                        }else{
                            fn.lstRequestFocus();
                        }
                    }
                    break;
                }
                case KeyEvent.VK_DOWN: {
                    if(!(ct.getClass().getSimpleName().equalsIgnoreCase("JTABLE")))
                        {
                            if (!fn.isListVisible()){
                                Component c = findNextFocus();
                                if (c==null) return;
                                c.requestFocus();
                            }else{
                                fn.lstRequestFocus();
                            }
                            break;
                    }
                }

                case KeyEvent.VK_UP: {
                    if(!(evt.getSource() instanceof JTable)){
                        Component c = findPrevFocus();
                        c.requestFocus();
                    }
                    break;
                }
                case KeyEvent.VK_F4:{
                    break;
                }
                
                case KeyEvent.VK_DELETE:{
                    break;

                }
                
            }
        }

//        @Override
//        public void keyReleased(KeyEvent evt){
//            if(evt.getSource().equals(txtDisc)||evt.getSource().equals(txtQty)||evt.getSource().equals(txtUnitPrice))
//                GeneralFunction.keyTyped(evt);
//        }

        public Component findNextFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component nextFocus = policy.getComponentAfter(root, c);
                if (nextFocus == null) {
                    nextFocus = policy.getDefaultComponent(root);
                }
                return nextFocus;
            }
            return null;
        }

        public Component findPrevFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component prevFocus = policy.getComponentBefore(root, c);
                if (prevFocus == null) {
                    prevFocus = policy.getDefaultComponent(root);
                }
                return prevFocus;
            }
            return null;
        }
    }
}
